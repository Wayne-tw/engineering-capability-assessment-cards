/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ (function(module) {

eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/eventemitter3/index.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/core/Ky.js":
/*!*************************************************!*\
  !*** ./node_modules/ky/distribution/core/Ky.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ky\": function() { return /* binding */ Ky; }\n/* harmony export */ });\n/* harmony import */ var _errors_HTTPError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors/HTTPError.js */ \"./node_modules/ky/distribution/errors/HTTPError.js\");\n/* harmony import */ var _errors_TimeoutError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors/TimeoutError.js */ \"./node_modules/ky/distribution/errors/TimeoutError.js\");\n/* harmony import */ var _utils_merge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/merge.js */ \"./node_modules/ky/distribution/utils/merge.js\");\n/* harmony import */ var _utils_normalize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/normalize.js */ \"./node_modules/ky/distribution/utils/normalize.js\");\n/* harmony import */ var _utils_time_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/time.js */ \"./node_modules/ky/distribution/utils/time.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/ky/distribution/core/constants.js\");\n\n\n\n\n\n\nclass Ky {\n    // eslint-disable-next-line complexity\n    constructor(input, options = {}) {\n        Object.defineProperty(this, \"request\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"abortController\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_retryCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"_input\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._input = input;\n        this._options = {\n            // TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n            credentials: this._input.credentials || 'same-origin',\n            ...options,\n            headers: (0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_0__.mergeHeaders)(this._input.headers, options.headers),\n            hooks: (0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_0__.deepMerge)({\n                beforeRequest: [],\n                beforeRetry: [],\n                beforeError: [],\n                afterResponse: [],\n            }, options.hooks),\n            method: (0,_utils_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalizeRequestMethod)(options.method ?? this._input.method),\n            // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n            prefixUrl: String(options.prefixUrl || ''),\n            retry: (0,_utils_normalize_js__WEBPACK_IMPORTED_MODULE_1__.normalizeRetryOptions)(options.retry),\n            throwHttpErrors: options.throwHttpErrors !== false,\n            timeout: typeof options.timeout === 'undefined' ? 10000 : options.timeout,\n            fetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n        };\n        if (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globalThis.Request)) {\n            throw new TypeError('`input` must be a string, URL, or Request');\n        }\n        if (this._options.prefixUrl && typeof this._input === 'string') {\n            if (this._input.startsWith('/')) {\n                throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n            }\n            if (!this._options.prefixUrl.endsWith('/')) {\n                this._options.prefixUrl += '/';\n            }\n            this._input = this._options.prefixUrl + this._input;\n        }\n        if (_constants_js__WEBPACK_IMPORTED_MODULE_2__.supportsAbortController) {\n            this.abortController = new globalThis.AbortController();\n            if (this._options.signal) {\n                this._options.signal.addEventListener('abort', () => {\n                    this.abortController.abort();\n                });\n            }\n            this._options.signal = this.abortController.signal;\n        }\n        this.request = new globalThis.Request(this._input, this._options);\n        if (this._options.searchParams) {\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const textSearchParams = typeof this._options.searchParams === 'string'\n                ? this._options.searchParams.replace(/^\\?/, '')\n                : new URLSearchParams(this._options.searchParams).toString();\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const searchParams = '?' + textSearchParams;\n            const url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n            // To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n            if (((_constants_js__WEBPACK_IMPORTED_MODULE_2__.supportsFormData && this._options.body instanceof globalThis.FormData)\n                || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n                this.request.headers.delete('content-type');\n            }\n            this.request = new globalThis.Request(new globalThis.Request(url, this.request), this._options);\n        }\n        if (this._options.json !== undefined) {\n            this._options.body = JSON.stringify(this._options.json);\n            this.request.headers.set('content-type', this._options.headers.get('content-type') ?? 'application/json');\n            this.request = new globalThis.Request(this.request, { body: this._options.body });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    static create(input, options) {\n        const ky = new Ky(input, options);\n        const fn = async () => {\n            if (ky._options.timeout > _constants_js__WEBPACK_IMPORTED_MODULE_2__.maxSafeTimeout) {\n                throw new RangeError(`The \\`timeout\\` option cannot be greater than ${_constants_js__WEBPACK_IMPORTED_MODULE_2__.maxSafeTimeout}`);\n            }\n            // Delay the fetch so that body method shortcuts can set the Accept header\n            await Promise.resolve();\n            let response = await ky._fetch();\n            for (const hook of ky._options.hooks.afterResponse) {\n                // eslint-disable-next-line no-await-in-loop\n                const modifiedResponse = await hook(ky.request, ky._options, ky._decorateResponse(response.clone()));\n                if (modifiedResponse instanceof globalThis.Response) {\n                    response = modifiedResponse;\n                }\n            }\n            ky._decorateResponse(response);\n            if (!response.ok && ky._options.throwHttpErrors) {\n                let error = new _errors_HTTPError_js__WEBPACK_IMPORTED_MODULE_3__.HTTPError(response, ky.request, ky._options);\n                for (const hook of ky._options.hooks.beforeError) {\n                    // eslint-disable-next-line no-await-in-loop\n                    error = await hook(error);\n                }\n                throw error;\n            }\n            // If `onDownloadProgress` is passed, it uses the stream API internally\n            /* istanbul ignore next */\n            if (ky._options.onDownloadProgress) {\n                if (typeof ky._options.onDownloadProgress !== 'function') {\n                    throw new TypeError('The `onDownloadProgress` option must be a function');\n                }\n                if (!_constants_js__WEBPACK_IMPORTED_MODULE_2__.supportsStreams) {\n                    throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n                }\n                return ky._stream(response.clone(), ky._options.onDownloadProgress);\n            }\n            return response;\n        };\n        const isRetriableMethod = ky._options.retry.methods.includes(ky.request.method.toLowerCase());\n        const result = (isRetriableMethod ? ky._retry(fn) : fn());\n        for (const [type, mimeType] of Object.entries(_constants_js__WEBPACK_IMPORTED_MODULE_2__.responseTypes)) {\n            result[type] = async () => {\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                ky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n                const awaitedResult = await result;\n                const response = awaitedResult.clone();\n                if (type === 'json') {\n                    if (response.status === 204) {\n                        return '';\n                    }\n                    if (options.parseJson) {\n                        return options.parseJson(await response.text());\n                    }\n                }\n                return response[type]();\n            };\n        }\n        return result;\n    }\n    _calculateRetryDelay(error) {\n        this._retryCount++;\n        if (this._retryCount < this._options.retry.limit && !(error instanceof _errors_TimeoutError_js__WEBPACK_IMPORTED_MODULE_4__.TimeoutError)) {\n            if (error instanceof _errors_HTTPError_js__WEBPACK_IMPORTED_MODULE_3__.HTTPError) {\n                if (!this._options.retry.statusCodes.includes(error.response.status)) {\n                    return 0;\n                }\n                const retryAfter = error.response.headers.get('Retry-After');\n                if (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n                    let after = Number(retryAfter);\n                    if (Number.isNaN(after)) {\n                        after = Date.parse(retryAfter) - Date.now();\n                    }\n                    else {\n                        after *= 1000;\n                    }\n                    if (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n                        return 0;\n                    }\n                    return after;\n                }\n                if (error.response.status === 413) {\n                    return 0;\n                }\n            }\n            const BACKOFF_FACTOR = 0.3;\n            return BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000;\n        }\n        return 0;\n    }\n    _decorateResponse(response) {\n        if (this._options.parseJson) {\n            response.json = async () => this._options.parseJson(await response.text());\n        }\n        return response;\n    }\n    async _retry(fn) {\n        try {\n            return await fn();\n            // eslint-disable-next-line @typescript-eslint/no-implicit-any-catch\n        }\n        catch (error) {\n            const ms = Math.min(this._calculateRetryDelay(error), _constants_js__WEBPACK_IMPORTED_MODULE_2__.maxSafeTimeout);\n            if (ms !== 0 && this._retryCount > 0) {\n                await (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_5__.delay)(ms);\n                for (const hook of this._options.hooks.beforeRetry) {\n                    // eslint-disable-next-line no-await-in-loop\n                    const hookResult = await hook({\n                        request: this.request,\n                        options: this._options,\n                        error: error,\n                        retryCount: this._retryCount,\n                    });\n                    // If `stop` is returned from the hook, the retry process is stopped\n                    if (hookResult === _constants_js__WEBPACK_IMPORTED_MODULE_2__.stop) {\n                        return;\n                    }\n                }\n                return this._retry(fn);\n            }\n            throw error;\n        }\n    }\n    async _fetch() {\n        for (const hook of this._options.hooks.beforeRequest) {\n            // eslint-disable-next-line no-await-in-loop\n            const result = await hook(this.request, this._options);\n            if (result instanceof Request) {\n                this.request = result;\n                break;\n            }\n            if (result instanceof Response) {\n                return result;\n            }\n        }\n        if (this._options.timeout === false) {\n            return this._options.fetch(this.request.clone());\n        }\n        return (0,_utils_time_js__WEBPACK_IMPORTED_MODULE_5__.timeout)(this.request.clone(), this.abortController, this._options);\n    }\n    /* istanbul ignore next */\n    _stream(response, onDownloadProgress) {\n        const totalBytes = Number(response.headers.get('content-length')) || 0;\n        let transferredBytes = 0;\n        return new globalThis.Response(new globalThis.ReadableStream({\n            async start(controller) {\n                const reader = response.body.getReader();\n                if (onDownloadProgress) {\n                    onDownloadProgress({ percent: 0, transferredBytes: 0, totalBytes }, new Uint8Array());\n                }\n                async function read() {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        controller.close();\n                        return;\n                    }\n                    if (onDownloadProgress) {\n                        transferredBytes += value.byteLength;\n                        const percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                        onDownloadProgress({ percent, transferredBytes, totalBytes }, value);\n                    }\n                    controller.enqueue(value);\n                    await read();\n                }\n                await read();\n            },\n        }), {\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n        });\n    }\n}\n//# sourceMappingURL=Ky.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/core/Ky.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/core/constants.js":
/*!********************************************************!*\
  !*** ./node_modules/ky/distribution/core/constants.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"supportsAbortController\": function() { return /* binding */ supportsAbortController; },\n/* harmony export */   \"supportsStreams\": function() { return /* binding */ supportsStreams; },\n/* harmony export */   \"supportsFormData\": function() { return /* binding */ supportsFormData; },\n/* harmony export */   \"requestMethods\": function() { return /* binding */ requestMethods; },\n/* harmony export */   \"responseTypes\": function() { return /* binding */ responseTypes; },\n/* harmony export */   \"maxSafeTimeout\": function() { return /* binding */ maxSafeTimeout; },\n/* harmony export */   \"stop\": function() { return /* binding */ stop; }\n/* harmony export */ });\nconst supportsAbortController = typeof globalThis.AbortController === 'function';\nconst supportsStreams = typeof globalThis.ReadableStream === 'function';\nconst supportsFormData = typeof globalThis.FormData === 'function';\nconst requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst validate = () => undefined;\nvalidate();\nconst responseTypes = {\n    json: 'application/json',\n    text: 'text/*',\n    formData: 'multipart/form-data',\n    arrayBuffer: '*/*',\n    blob: '*/*',\n};\n// The maximum value of a 32bit int (see issue #117)\nconst maxSafeTimeout = 2147483647;\nconst stop = Symbol('stop');\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/core/constants.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/errors/HTTPError.js":
/*!**********************************************************!*\
  !*** ./node_modules/ky/distribution/errors/HTTPError.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HTTPError\": function() { return /* binding */ HTTPError; }\n/* harmony export */ });\n// eslint-lint-disable-next-line @typescript-eslint/naming-convention\nclass HTTPError extends Error {\n    constructor(response, request, options) {\n        const code = (response.status || response.status === 0) ? response.status : '';\n        const title = response.statusText || '';\n        const status = `${code} ${title}`.trim();\n        const reason = status ? `status code ${status}` : 'an unknown error';\n        super(`Request failed with ${reason}`);\n        Object.defineProperty(this, \"response\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"request\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'HTTPError';\n        this.response = response;\n        this.request = request;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=HTTPError.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/errors/HTTPError.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/errors/TimeoutError.js":
/*!*************************************************************!*\
  !*** ./node_modules/ky/distribution/errors/TimeoutError.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TimeoutError\": function() { return /* binding */ TimeoutError; }\n/* harmony export */ });\nclass TimeoutError extends Error {\n    constructor(request) {\n        super('Request timed out');\n        Object.defineProperty(this, \"request\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'TimeoutError';\n        this.request = request;\n    }\n}\n//# sourceMappingURL=TimeoutError.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/errors/TimeoutError.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/index.js":
/*!***********************************************!*\
  !*** ./node_modules/ky/distribution/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HTTPError\": function() { return /* reexport safe */ _errors_HTTPError_js__WEBPACK_IMPORTED_MODULE_3__.HTTPError; },\n/* harmony export */   \"TimeoutError\": function() { return /* reexport safe */ _errors_TimeoutError_js__WEBPACK_IMPORTED_MODULE_4__.TimeoutError; }\n/* harmony export */ });\n/* harmony import */ var _core_Ky_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Ky.js */ \"./node_modules/ky/distribution/core/Ky.js\");\n/* harmony import */ var _core_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/constants.js */ \"./node_modules/ky/distribution/core/constants.js\");\n/* harmony import */ var _utils_merge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/merge.js */ \"./node_modules/ky/distribution/utils/merge.js\");\n/* harmony import */ var _errors_HTTPError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors/HTTPError.js */ \"./node_modules/ky/distribution/errors/HTTPError.js\");\n/* harmony import */ var _errors_TimeoutError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors/TimeoutError.js */ \"./node_modules/ky/distribution/errors/TimeoutError.js\");\n/*! MIT License © Sindre Sorhus */\n\n\n\nconst createInstance = (defaults) => {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    const ky = (input, options) => _core_Ky_js__WEBPACK_IMPORTED_MODULE_0__.Ky.create(input, (0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_1__.validateAndMerge)(defaults, options));\n    for (const method of _core_constants_js__WEBPACK_IMPORTED_MODULE_2__.requestMethods) {\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        ky[method] = (input, options) => _core_Ky_js__WEBPACK_IMPORTED_MODULE_0__.Ky.create(input, (0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_1__.validateAndMerge)(defaults, options, { method }));\n    }\n    ky.create = (newDefaults) => createInstance((0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_1__.validateAndMerge)(newDefaults));\n    ky.extend = (newDefaults) => createInstance((0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_1__.validateAndMerge)(defaults, newDefaults));\n    ky.stop = _core_constants_js__WEBPACK_IMPORTED_MODULE_2__.stop;\n    return ky;\n};\nconst ky = createInstance();\n/* harmony default export */ __webpack_exports__[\"default\"] = (ky);\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/index.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/utils/is.js":
/*!**************************************************!*\
  !*** ./node_modules/ky/distribution/utils/is.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isObject\": function() { return /* binding */ isObject; }\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst isObject = (value) => value !== null && typeof value === 'object';\n//# sourceMappingURL=is.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/utils/is.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/utils/merge.js":
/*!*****************************************************!*\
  !*** ./node_modules/ky/distribution/utils/merge.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validateAndMerge\": function() { return /* binding */ validateAndMerge; },\n/* harmony export */   \"mergeHeaders\": function() { return /* binding */ mergeHeaders; },\n/* harmony export */   \"deepMerge\": function() { return /* binding */ deepMerge; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/ky/distribution/utils/is.js\");\n\nconst validateAndMerge = (...sources) => {\n    for (const source of sources) {\n        if ((!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n            throw new TypeError('The `options` argument must be an object');\n        }\n    }\n    return deepMerge({}, ...sources);\n};\nconst mergeHeaders = (source1 = {}, source2 = {}) => {\n    const result = new globalThis.Headers(source1);\n    const isHeadersInstance = source2 instanceof globalThis.Headers;\n    const source = new globalThis.Headers(source2);\n    for (const [key, value] of source.entries()) {\n        if ((isHeadersInstance && value === 'undefined') || value === undefined) {\n            result.delete(key);\n        }\n        else {\n            result.set(key, value);\n        }\n    }\n    return result;\n};\n// TODO: Make this strongly-typed (no `any`).\nconst deepMerge = (...sources) => {\n    let returnValue = {};\n    let headers = {};\n    for (const source of sources) {\n        if (Array.isArray(source)) {\n            if (!Array.isArray(returnValue)) {\n                returnValue = [];\n            }\n            returnValue = [...returnValue, ...source];\n        }\n        else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(source)) {\n            for (let [key, value] of Object.entries(source)) {\n                if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) && key in returnValue) {\n                    value = deepMerge(returnValue[key], value);\n                }\n                returnValue = { ...returnValue, [key]: value };\n            }\n            if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(source.headers)) {\n                headers = mergeHeaders(headers, source.headers);\n                returnValue.headers = headers;\n            }\n        }\n    }\n    return returnValue;\n};\n//# sourceMappingURL=merge.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/utils/merge.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/utils/normalize.js":
/*!*********************************************************!*\
  !*** ./node_modules/ky/distribution/utils/normalize.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalizeRequestMethod\": function() { return /* binding */ normalizeRequestMethod; },\n/* harmony export */   \"normalizeRetryOptions\": function() { return /* binding */ normalizeRetryOptions; }\n/* harmony export */ });\n/* harmony import */ var _core_constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/constants.js */ \"./node_modules/ky/distribution/core/constants.js\");\n\nconst normalizeRequestMethod = (input) => _core_constants_js__WEBPACK_IMPORTED_MODULE_0__.requestMethods.includes(input) ? input.toUpperCase() : input;\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\nconst retryAfterStatusCodes = [413, 429, 503];\nconst defaultRetryOptions = {\n    limit: 2,\n    methods: retryMethods,\n    statusCodes: retryStatusCodes,\n    afterStatusCodes: retryAfterStatusCodes,\n    maxRetryAfter: Number.POSITIVE_INFINITY,\n};\nconst normalizeRetryOptions = (retry = {}) => {\n    if (typeof retry === 'number') {\n        return {\n            ...defaultRetryOptions,\n            limit: retry,\n        };\n    }\n    if (retry.methods && !Array.isArray(retry.methods)) {\n        throw new Error('retry.methods must be an array');\n    }\n    if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n        throw new Error('retry.statusCodes must be an array');\n    }\n    return {\n        ...defaultRetryOptions,\n        ...retry,\n        afterStatusCodes: retryAfterStatusCodes,\n    };\n};\n//# sourceMappingURL=normalize.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/utils/normalize.js?");

/***/ }),

/***/ "./node_modules/ky/distribution/utils/time.js":
/*!****************************************************!*\
  !*** ./node_modules/ky/distribution/utils/time.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"timeout\": function() { return /* binding */ timeout; },\n/* harmony export */   \"delay\": function() { return /* binding */ delay; }\n/* harmony export */ });\n/* harmony import */ var _errors_TimeoutError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/TimeoutError.js */ \"./node_modules/ky/distribution/errors/TimeoutError.js\");\n\n// `Promise.race()` workaround (#91)\nconst timeout = async (request, abortController, options) => new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n        if (abortController) {\n            abortController.abort();\n        }\n        reject(new _errors_TimeoutError_js__WEBPACK_IMPORTED_MODULE_0__.TimeoutError(request));\n    }, options.timeout);\n    void options\n        .fetch(request)\n        .then(resolve)\n        .catch(reject)\n        .then(() => {\n        clearTimeout(timeoutId);\n    });\n});\nconst delay = async (ms) => new Promise(resolve => {\n    setTimeout(resolve, ms);\n});\n//# sourceMappingURL=time.js.map\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/ky/distribution/utils/time.js?");

/***/ }),

/***/ "./node_modules/mustache/mustache.mjs":
/*!********************************************!*\
  !*** ./node_modules/mustache/mustache.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\nvar objectToString = Object.prototype.toString;\nvar isArray = Array.isArray || function isArrayPolyfill (object) {\n  return objectToString.call(object) === '[object Array]';\n};\n\nfunction isFunction (object) {\n  return typeof object === 'function';\n}\n\n/**\n * More correct typeof string handling array\n * which normally returns typeof 'object'\n */\nfunction typeStr (obj) {\n  return isArray(obj) ? 'array' : typeof obj;\n}\n\nfunction escapeRegExp (string) {\n  return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Null safe way of checking whether or not an object,\n * including its prototype, has a given property\n */\nfunction hasProperty (obj, propName) {\n  return obj != null && typeof obj === 'object' && (propName in obj);\n}\n\n/**\n * Safe way of detecting whether or not the given thing is a primitive and\n * whether it has the given property\n */\nfunction primitiveHasOwnProperty (primitive, propName) {\n  return (\n    primitive != null\n    && typeof primitive !== 'object'\n    && primitive.hasOwnProperty\n    && primitive.hasOwnProperty(propName)\n  );\n}\n\n// Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n// See https://github.com/janl/mustache.js/issues/189\nvar regExpTest = RegExp.prototype.test;\nfunction testRegExp (re, string) {\n  return regExpTest.call(re, string);\n}\n\nvar nonSpaceRe = /\\S/;\nfunction isWhitespace (string) {\n  return !testRegExp(nonSpaceRe, string);\n}\n\nvar entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nfunction escapeHtml (string) {\n  return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n    return entityMap[s];\n  });\n}\n\nvar whiteRe = /\\s*/;\nvar spaceRe = /\\s+/;\nvar equalsRe = /\\s*=/;\nvar curlyRe = /\\s*\\}/;\nvar tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n/**\n * Breaks up the given `template` string into a tree of tokens. If the `tags`\n * argument is given here it must be an array with two string values: the\n * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n * course, the default is to use mustaches (i.e. mustache.tags).\n *\n * A token is an array with at least 4 elements. The first element is the\n * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n * all text that appears outside a symbol this element is \"text\".\n *\n * The second element of a token is its \"value\". For mustache tags this is\n * whatever else was inside the tag besides the opening symbol. For text tokens\n * this is the text itself.\n *\n * The third and fourth elements of the token are the start and end indices,\n * respectively, of the token in the original template.\n *\n * Tokens that are the root node of a subtree contain two more elements: 1) an\n * array of tokens in the subtree and 2) the index in the original template at\n * which the closing tag for that section begins.\n *\n * Tokens for partials also contain two more elements: 1) a string value of\n * indendation prior to that tag and 2) the index of that tag on that line -\n * eg a value of 2 indicates the partial is the third tag on this line.\n */\nfunction parseTemplate (template, tags) {\n  if (!template)\n    return [];\n  var lineHasNonSpace = false;\n  var sections = [];     // Stack to hold section tokens\n  var tokens = [];       // Buffer to hold the tokens\n  var spaces = [];       // Indices of whitespace tokens on the current line\n  var hasTag = false;    // Is there a {{tag}} on the current line?\n  var nonSpace = false;  // Is there a non-space char on the current line?\n  var indentation = '';  // Tracks indentation for tags that use it\n  var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n  // Strips all whitespace tokens array for the current line\n  // if there was a {{#tag}} on it and otherwise only space.\n  function stripSpace () {\n    if (hasTag && !nonSpace) {\n      while (spaces.length)\n        delete tokens[spaces.pop()];\n    } else {\n      spaces = [];\n    }\n\n    hasTag = false;\n    nonSpace = false;\n  }\n\n  var openingTagRe, closingTagRe, closingCurlyRe;\n  function compileTags (tagsToCompile) {\n    if (typeof tagsToCompile === 'string')\n      tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n    if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n      throw new Error('Invalid tags: ' + tagsToCompile);\n\n    openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n    closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n    closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n  }\n\n  compileTags(tags || mustache.tags);\n\n  var scanner = new Scanner(template);\n\n  var start, type, value, chr, token, openSection;\n  while (!scanner.eos()) {\n    start = scanner.pos;\n\n    // Match any text between tags.\n    value = scanner.scanUntil(openingTagRe);\n\n    if (value) {\n      for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n        chr = value.charAt(i);\n\n        if (isWhitespace(chr)) {\n          spaces.push(tokens.length);\n          indentation += chr;\n        } else {\n          nonSpace = true;\n          lineHasNonSpace = true;\n          indentation += ' ';\n        }\n\n        tokens.push([ 'text', chr, start, start + 1 ]);\n        start += 1;\n\n        // Check for whitespace on the current line.\n        if (chr === '\\n') {\n          stripSpace();\n          indentation = '';\n          tagIndex = 0;\n          lineHasNonSpace = false;\n        }\n      }\n    }\n\n    // Match the opening tag.\n    if (!scanner.scan(openingTagRe))\n      break;\n\n    hasTag = true;\n\n    // Get the tag type.\n    type = scanner.scan(tagRe) || 'name';\n    scanner.scan(whiteRe);\n\n    // Get the tag value.\n    if (type === '=') {\n      value = scanner.scanUntil(equalsRe);\n      scanner.scan(equalsRe);\n      scanner.scanUntil(closingTagRe);\n    } else if (type === '{') {\n      value = scanner.scanUntil(closingCurlyRe);\n      scanner.scan(curlyRe);\n      scanner.scanUntil(closingTagRe);\n      type = '&';\n    } else {\n      value = scanner.scanUntil(closingTagRe);\n    }\n\n    // Match the closing tag.\n    if (!scanner.scan(closingTagRe))\n      throw new Error('Unclosed tag at ' + scanner.pos);\n\n    if (type == '>') {\n      token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n    } else {\n      token = [ type, value, start, scanner.pos ];\n    }\n    tagIndex++;\n    tokens.push(token);\n\n    if (type === '#' || type === '^') {\n      sections.push(token);\n    } else if (type === '/') {\n      // Check section nesting.\n      openSection = sections.pop();\n\n      if (!openSection)\n        throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n      if (openSection[1] !== value)\n        throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n    } else if (type === 'name' || type === '{' || type === '&') {\n      nonSpace = true;\n    } else if (type === '=') {\n      // Set the tags for the next time around.\n      compileTags(value);\n    }\n  }\n\n  stripSpace();\n\n  // Make sure there are no open sections when we're done.\n  openSection = sections.pop();\n\n  if (openSection)\n    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n  return nestTokens(squashTokens(tokens));\n}\n\n/**\n * Combines the values of consecutive text tokens in the given `tokens` array\n * to a single token.\n */\nfunction squashTokens (tokens) {\n  var squashedTokens = [];\n\n  var token, lastToken;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    if (token) {\n      if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n        lastToken[1] += token[1];\n        lastToken[3] = token[3];\n      } else {\n        squashedTokens.push(token);\n        lastToken = token;\n      }\n    }\n  }\n\n  return squashedTokens;\n}\n\n/**\n * Forms the given array of `tokens` into a nested tree structure where\n * tokens that represent a section have two additional items: 1) an array of\n * all tokens that appear in that section and 2) the index in the original\n * template that represents the end of that section.\n */\nfunction nestTokens (tokens) {\n  var nestedTokens = [];\n  var collector = nestedTokens;\n  var sections = [];\n\n  var token, section;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    token = tokens[i];\n\n    switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n    }\n  }\n\n  return nestedTokens;\n}\n\n/**\n * A simple string scanner that is used by the template parser to find\n * tokens in template strings.\n */\nfunction Scanner (string) {\n  this.string = string;\n  this.tail = string;\n  this.pos = 0;\n}\n\n/**\n * Returns `true` if the tail is empty (end of string).\n */\nScanner.prototype.eos = function eos () {\n  return this.tail === '';\n};\n\n/**\n * Tries to match the given regular expression at the current position.\n * Returns the matched text if it can match, the empty string otherwise.\n */\nScanner.prototype.scan = function scan (re) {\n  var match = this.tail.match(re);\n\n  if (!match || match.index !== 0)\n    return '';\n\n  var string = match[0];\n\n  this.tail = this.tail.substring(string.length);\n  this.pos += string.length;\n\n  return string;\n};\n\n/**\n * Skips all text until the given regular expression can be matched. Returns\n * the skipped string, which is the entire tail if no match can be made.\n */\nScanner.prototype.scanUntil = function scanUntil (re) {\n  var index = this.tail.search(re), match;\n\n  switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = '';\n      break;\n    case 0:\n      match = '';\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n  }\n\n  this.pos += match.length;\n\n  return match;\n};\n\n/**\n * Represents a rendering context by wrapping a view object and\n * maintaining a reference to the parent context.\n */\nfunction Context (view, parentContext) {\n  this.view = view;\n  this.cache = { '.': this.view };\n  this.parent = parentContext;\n}\n\n/**\n * Creates a new context using the given view with this context\n * as the parent.\n */\nContext.prototype.push = function push (view) {\n  return new Context(view, this);\n};\n\n/**\n * Returns the value of the given name in this context, traversing\n * up the context hierarchy if the value is absent in this context's view.\n */\nContext.prototype.lookup = function lookup (name) {\n  var cache = this.cache;\n\n  var value;\n  if (cache.hasOwnProperty(name)) {\n    value = cache[name];\n  } else {\n    var context = this, intermediateValue, names, index, lookupHit = false;\n\n    while (context) {\n      if (name.indexOf('.') > 0) {\n        intermediateValue = context.view;\n        names = name.split('.');\n        index = 0;\n\n        /**\n         * Using the dot notion path in `name`, we descend through the\n         * nested objects.\n         *\n         * To be certain that the lookup has been successful, we have to\n         * check if the last object in the path actually has the property\n         * we are looking for. We store the result in `lookupHit`.\n         *\n         * This is specially necessary for when the value has been set to\n         * `undefined` and we want to avoid looking up parent contexts.\n         *\n         * In the case where dot notation is used, we consider the lookup\n         * to be successful even if the last \"object\" in the path is\n         * not actually an object but a primitive (e.g., a string, or an\n         * integer), because it is sometimes useful to access a property\n         * of an autoboxed primitive, such as the length of a string.\n         **/\n        while (intermediateValue != null && index < names.length) {\n          if (index === names.length - 1)\n            lookupHit = (\n              hasProperty(intermediateValue, names[index])\n              || primitiveHasOwnProperty(intermediateValue, names[index])\n            );\n\n          intermediateValue = intermediateValue[names[index++]];\n        }\n      } else {\n        intermediateValue = context.view[name];\n\n        /**\n         * Only checking against `hasProperty`, which always returns `false` if\n         * `context.view` is not an object. Deliberately omitting the check\n         * against `primitiveHasOwnProperty` if dot notation is not used.\n         *\n         * Consider this example:\n         * ```\n         * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n         * ```\n         *\n         * If we were to check also against `primitiveHasOwnProperty`, as we do\n         * in the dot notation case, then render call would return:\n         *\n         * \"The length of a football field is 9.\"\n         *\n         * rather than the expected:\n         *\n         * \"The length of a football field is 100 yards.\"\n         **/\n        lookupHit = hasProperty(context.view, name);\n      }\n\n      if (lookupHit) {\n        value = intermediateValue;\n        break;\n      }\n\n      context = context.parent;\n    }\n\n    cache[name] = value;\n  }\n\n  if (isFunction(value))\n    value = value.call(this.view);\n\n  return value;\n};\n\n/**\n * A Writer knows how to take a stream of tokens and render them to a\n * string, given a context. It also maintains a cache of templates to\n * avoid the need to parse the same template twice.\n */\nfunction Writer () {\n  this.templateCache = {\n    _cache: {},\n    set: function set (key, value) {\n      this._cache[key] = value;\n    },\n    get: function get (key) {\n      return this._cache[key];\n    },\n    clear: function clear () {\n      this._cache = {};\n    }\n  };\n}\n\n/**\n * Clears all cached templates in this writer.\n */\nWriter.prototype.clearCache = function clearCache () {\n  if (typeof this.templateCache !== 'undefined') {\n    this.templateCache.clear();\n  }\n};\n\n/**\n * Parses and caches the given `template` according to the given `tags` or\n * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n * that is generated from the parse.\n */\nWriter.prototype.parse = function parse (template, tags) {\n  var cache = this.templateCache;\n  var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n  var isCacheEnabled = typeof cache !== 'undefined';\n  var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n  if (tokens == undefined) {\n    tokens = parseTemplate(template, tags);\n    isCacheEnabled && cache.set(cacheKey, tokens);\n  }\n  return tokens;\n};\n\n/**\n * High-level method that is used to render the given `template` with\n * the given `view`.\n *\n * The optional `partials` argument may be an object that contains the\n * names and templates of partials that are used in the template. It may\n * also be a function that is used to load partial templates on the fly\n * that takes a single argument: the name of the partial.\n *\n * If the optional `config` argument is given here, then it should be an\n * object with a `tags` attribute or an `escape` attribute or both.\n * If an array is passed, then it will be interpreted the same way as\n * a `tags` attribute on a `config` object.\n *\n * The `tags` attribute of a `config` object must be an array with two\n * string values: the opening and closing tags used in the template (e.g.\n * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n *\n * The `escape` attribute of a `config` object must be a function which\n * accepts a string as input and outputs a safely escaped string.\n * If an `escape` function is not provided, then an HTML-safe string\n * escaping function is used as the default.\n */\nWriter.prototype.render = function render (template, view, partials, config) {\n  var tags = this.getConfigTags(config);\n  var tokens = this.parse(template, tags);\n  var context = (view instanceof Context) ? view : new Context(view, undefined);\n  return this.renderTokens(tokens, context, partials, template, config);\n};\n\n/**\n * Low-level method that renders the given array of `tokens` using\n * the given `context` and `partials`.\n *\n * Note: The `originalTemplate` is only ever used to extract the portion\n * of the original template that was contained in a higher-order section.\n * If the template doesn't use higher-order sections, this argument may\n * be omitted.\n */\nWriter.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n  var buffer = '';\n\n  var token, symbol, value;\n  for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n    value = undefined;\n    token = tokens[i];\n    symbol = token[0];\n\n    if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n    else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n    else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n    else if (symbol === '&') value = this.unescapedValue(token, context);\n    else if (symbol === 'name') value = this.escapedValue(token, context, config);\n    else if (symbol === 'text') value = this.rawValue(token);\n\n    if (value !== undefined)\n      buffer += value;\n  }\n\n  return buffer;\n};\n\nWriter.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n  var self = this;\n  var buffer = '';\n  var value = context.lookup(token[1]);\n\n  // This function is used to render an arbitrary template\n  // in the current context by higher-order sections.\n  function subRender (template) {\n    return self.render(template, context, partials, config);\n  }\n\n  if (!value) return;\n\n  if (isArray(value)) {\n    for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n      buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n    }\n  } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n    buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n  } else if (isFunction(value)) {\n    if (typeof originalTemplate !== 'string')\n      throw new Error('Cannot use higher-order sections without the original template');\n\n    // Extract the portion of the original template that the section contains.\n    value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n    if (value != null)\n      buffer += value;\n  } else {\n    buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n  }\n  return buffer;\n};\n\nWriter.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n  var value = context.lookup(token[1]);\n\n  // Use JavaScript's definition of falsy. Include empty arrays.\n  // See https://github.com/janl/mustache.js/issues/186\n  if (!value || (isArray(value) && value.length === 0))\n    return this.renderTokens(token[4], context, partials, originalTemplate, config);\n};\n\nWriter.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n  var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n  var partialByNl = partial.split('\\n');\n  for (var i = 0; i < partialByNl.length; i++) {\n    if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n      partialByNl[i] = filteredIndentation + partialByNl[i];\n    }\n  }\n  return partialByNl.join('\\n');\n};\n\nWriter.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n  if (!partials) return;\n  var tags = this.getConfigTags(config);\n\n  var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n  if (value != null) {\n    var lineHasNonSpace = token[6];\n    var tagIndex = token[5];\n    var indentation = token[4];\n    var indentedValue = value;\n    if (tagIndex == 0 && indentation) {\n      indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n    }\n    var tokens = this.parse(indentedValue, tags);\n    return this.renderTokens(tokens, context, partials, indentedValue, config);\n  }\n};\n\nWriter.prototype.unescapedValue = function unescapedValue (token, context) {\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return value;\n};\n\nWriter.prototype.escapedValue = function escapedValue (token, context, config) {\n  var escape = this.getConfigEscape(config) || mustache.escape;\n  var value = context.lookup(token[1]);\n  if (value != null)\n    return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n};\n\nWriter.prototype.rawValue = function rawValue (token) {\n  return token[1];\n};\n\nWriter.prototype.getConfigTags = function getConfigTags (config) {\n  if (isArray(config)) {\n    return config;\n  }\n  else if (config && typeof config === 'object') {\n    return config.tags;\n  }\n  else {\n    return undefined;\n  }\n};\n\nWriter.prototype.getConfigEscape = function getConfigEscape (config) {\n  if (config && typeof config === 'object' && !isArray(config)) {\n    return config.escape;\n  }\n  else {\n    return undefined;\n  }\n};\n\nvar mustache = {\n  name: 'mustache.js',\n  version: '4.2.0',\n  tags: [ '{{', '}}' ],\n  clearCache: undefined,\n  escape: undefined,\n  parse: undefined,\n  render: undefined,\n  Scanner: undefined,\n  Context: undefined,\n  Writer: undefined,\n  /**\n   * Allows a user to override the default caching strategy, by providing an\n   * object with set, get and clear methods. This can also be used to disable\n   * the cache by setting it to the literal `undefined`.\n   */\n  set templateCache (cache) {\n    defaultWriter.templateCache = cache;\n  },\n  /**\n   * Gets the default or overridden caching object from the default writer.\n   */\n  get templateCache () {\n    return defaultWriter.templateCache;\n  }\n};\n\n// All high-level mustache.* functions use this writer.\nvar defaultWriter = new Writer();\n\n/**\n * Clears all cached templates in the default writer.\n */\nmustache.clearCache = function clearCache () {\n  return defaultWriter.clearCache();\n};\n\n/**\n * Parses and caches the given template in the default writer and returns the\n * array of tokens it contains. Doing this ahead of time avoids the need to\n * parse templates on the fly as they are rendered.\n */\nmustache.parse = function parse (template, tags) {\n  return defaultWriter.parse(template, tags);\n};\n\n/**\n * Renders the `template` with the given `view`, `partials`, and `config`\n * using the default writer.\n */\nmustache.render = function render (template, view, partials, config) {\n  if (typeof template !== 'string') {\n    throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                        'but \"' + typeStr(template) + '\" was given as the first ' +\n                        'argument for mustache#render(template, view, partials)');\n  }\n\n  return defaultWriter.render(template, view, partials, config);\n};\n\n// Export the escaping function so that the user may override it.\n// See https://github.com/janl/mustache.js/issues/244\nmustache.escape = escapeHtml;\n\n// Export these mainly for testing, but also for advanced usage.\nmustache.Scanner = Scanner;\nmustache.Context = Context;\nmustache.Writer = Writer;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (mustache);\n\n\n//# sourceURL=webpack://devsecops-assessment/./node_modules/mustache/mustache.mjs?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__) {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ky__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ky */ \"./node_modules/ky/distribution/index.js\");\n/* harmony import */ var _js_cardModel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/cardModel.js */ \"./src/js/cardModel.js\");\n/* harmony import */ var _js_cardRender_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/cardRender.js */ \"./src/js/cardRender.js\");\n\n\n\n\n\nconst EE = new (eventemitter3__WEBPACK_IMPORTED_MODULE_0___default())();\nfunction getServerState() {\n  return ky__WEBPACK_IMPORTED_MODULE_3__.default.get(\"http://localhost:8081/data/a89839123\").json();\n}\n\nlet state = await getServerState();\n\n//console.log({ cardData, state });\n// async function emitted() {\n//   state = await getServerState();\n//   console.log(state); // true\n// }\n\n// EE.on(\"score-updated\", emitted, state);\n// //EE.removeListener(\"another-event\", emitted, state);\n\n// hydrate the card data with the answer state from the server\n// so we can highlight chosen cards by this user\nconst hydratedCardData = _js_cardModel_js__WEBPACK_IMPORTED_MODULE_1__.default.map(el => { console.log(el) });\n\n// render the cards\nconst cardContainer = document.getElementById(\"card-container\");\ncardContainer.innerHTML = (0,_js_cardRender_js__WEBPACK_IMPORTED_MODULE_2__.renderUserView)(_js_cardModel_js__WEBPACK_IMPORTED_MODULE_1__.default);\n\n// add flip animation to cards, on number click\nconst cards = document.getElementsByClassName(\"card-number\");\nObject.values(cards).forEach((el) => {\n  el.addEventListener(\"click\", () => {\n    el.parentElement.parentElement.classList.toggle(\"flipCard\");\n   // EE.emit(\"score-updated\");\n  });\n});\n\n__webpack_handle_async_dependencies__();\n}, 1);\n\n//# sourceURL=webpack://devsecops-assessment/./src/index.js?");

/***/ }),

/***/ "./src/js/cardModel.js":
/*!*****************************!*\
  !*** ./src/js/cardModel.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _cards_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cards.json */ \"./src/js/cards.json\");\n// transform the raw card json\n// we want an array of elements that look like\n// [{\n//   categoryName: <name>\n//   cards:[<card_data>,card_data>]\n// },\n// {\n//   categoryName: <name>\n//   cards:[<card_data>,card_data>]\n// }]\n\n\n// get all categories first then add data to them\n// we want the data objects by returned by category\n// get unique categories to begin with\nlet categories = {};\n_cards_json__WEBPACK_IMPORTED_MODULE_0__.forEach((el) => {\n  categories[el.category] = {};\n});\n_cards_json__WEBPACK_IMPORTED_MODULE_0__.forEach((el) => {\n  if (el.category) {\n    categories[el.category].categoryName = el.category;\n    categories[el.category].cards = [];\n  }\n});\n_cards_json__WEBPACK_IMPORTED_MODULE_0__.forEach((el) => {\n  if (el.category) {\n    categories[el.category].categoryName = el.category;\n    categories[el.category].cards.push(el);\n  }\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object.values(categories));\n\n\n//# sourceURL=webpack://devsecops-assessment/./src/js/cardModel.js?");

/***/ }),

/***/ "./src/js/cardRender.js":
/*!******************************!*\
  !*** ./src/js/cardRender.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderUserView\": function() { return /* binding */ renderUserView; },\n/* harmony export */   \"renderFacilitatorView\": function() { return /* binding */ renderFacilitatorView; }\n/* harmony export */ });\n/* harmony import */ var mustache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.mjs\");\n\n\n/**\n * Render the client side template\n * @param {cardData} cardData object\n * @returns string <the rendered HTML template>\n */\nfunction renderUserView(cardData) {\n  return mustache__WEBPACK_IMPORTED_MODULE_0__.default.render(\n    `\n{{#data}}\n<div class=\"category-name\" data-category=\"{{slug}}\">\n  <h1>{{{categoryName}}}</h1>\n</div>\n{{#cards}}\n<div class=\"main-card-container col-md-6 col-lg-3 mb-2\">\n  <div class=\"question-card\">\n    <div class=\"card-front {{slug}}\">\n      <div class=\"card-number\">{{id}}</div>\n      {{#important}}\n      <span class=\"card-important\"><i class=\"fas fa-star\"></i></span>\n      {{/important}}\n      <h2>{{title}}</h2>\n      <p>{{description}}</p>\n      <footer class=\"card-footer\">{{categoryName}}</footer>\n      <div>\n        <div class=\"rectangle {{#response1}}chosen{{/response1}}\" data-score=\"1\">1</div>\n        <div class=\"rectangle {{#response2}}chosen{{/response2}}\" data-score=\"2\">2</div>\n        <div class=\"rectangle {{#response3}}chosen{{/response3}}\" data-score=\"3\">3</div>\n        <div class=\"rectangle {{#response4}}chosen{{/response4}}\" data-score=\"4\">4</div>\n      </div>\n    </div>\n    <div class=\"card-back\">\n      <div class=\"card-number\">{{id}}</div>\n      {{#important}}\n      <span class=\"card-important\"><i class=\"fas fa-star\"></i></span>\n      {{/important}}\n      <h2>{{title}}</h2>\n      <div class=\"card-score\">\n        <p class=\"card-points high-score\">4 points</p>\n        <p>{{high_score}}</p>\n      </div>\n      <div class=\"card-score\">\n        <p class=\"card-points low-score\">1 point</p>\n        <p>{{low_score}}</p>\n      </div>\n      {{#more_info_link}}\n      <p><a href=\"{{more_info_link}}\" class=\"card-link\">More Info</a></p>\n      {{/more_info_link}}\n    </div>\n  </div>\n</div>\n{{/cards}}\n{{/data}}\n`,\n    { data: cardData }\n  );\n}\n\nfunction renderFacilitatorView(cardData) {\n  return mustache__WEBPACK_IMPORTED_MODULE_0__.default.render(\n    `\n{{#data}}\n<div class=\"category-name\" data-category=\"{{slug}}\">\n  <h1>{{{categoryName}}}</h1>\n</div>\n{{#cards}}\n<div class=\"main-card-container col-md-6 col-lg-3 mb-2\">\n  <div class=\"question-card\">\n    <div class=\"card-front {{slug}}\">\n      <div class=\"card-number\">{{id}}</div>\n      {{#important}}\n      <span class=\"card-important\"><i class=\"fas fa-star\"></i></span>\n      {{/important}}\n      <h2>FACILITATOR:{{title}}</h2>\n      <p>{{description}}</p>\n      <footer class=\"card-footer\">{{categoryName}}</footer>\n      <div>\n        <div id=\"rectangle\" data-score=\"1\">1</div>\n        <div id=\"rectangle\" class=\"chosen\" data-score=\"2\">2</div>\n        <div id=\"rectangle\" data-score=\"3\">3</div>\n        <div id=\"rectangle\" data-score=\"4\">4</div>\n      </div>\n\n    </div>\n    <div class=\"card-back\">\n      <div class=\"card-number\">{{id}}</div>\n      {{#important}}\n      <span class=\"card-important\"><i class=\"fas fa-star\"></i></span>\n      {{/important}}\n      <h2>{{title}}</h2>\n      <div class=\"card-score\">\n        <p class=\"card-points high-score\">4 points</p>\n        <p>{{high_score}}</p>\n      </div>\n      <div class=\"card-score\">\n        <p class=\"card-points low-score\">1 point</p>\n        <p>{{low_score}}</p>\n      </div>\n      {{#more_info_link}}\n      <p><a href=\"{{more_info_link}}\" class=\"card-link\">More Info</a></p>\n      {{/more_info_link}}\n    </div>\n  </div>\n</div>\n{{/cards}}\n{{/data}}\n`,\n    { data: cardData }\n  );\n}\n\n\n\n\n//# sourceURL=webpack://devsecops-assessment/./src/js/cardRender.js?");

/***/ }),

/***/ "./src/js/cards.json":
/*!***************************!*\
  !*** ./src/js/cards.json ***!
  \***************************/
/***/ (function(module) {

eval("module.exports = JSON.parse('[{\"id\":1,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Config deployment\",\"description\":\"How easy is to deploy/inject a configuration change\",\"high_score\":\"We can run the majority of config changes independently of our code release.  All changes are auditable and revertable\",\"low_score\":\"We have to manual changes\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":2,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Feature Coverage\",\"description\":\"What proportion of the features are covered by a test\",\"high_score\":\"Every one of our features has at least one test\",\"low_score\":\"Less than 25% of our features have corresponding tests\",\"more_info_link\":null,\"important\":true,\"seq\":1,\"response3\":true},{\"id\":3,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Unplanned Work\",\"description\":\"How much unplanned work do you have and how do you handle it\",\"high_score\":\"We have very little unplanned work and have spare capacity to handle any that comes in\",\"low_score\":\"More than half our work in any given sprint is unplanned\",\"more_info_link\":null,\"important\":true,\"seq\":1,\"response1\":true},{\"id\":4,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Broken Builds\",\"description\":\"Don\\'t check In on broken build except to fix the broken build\",\"high_score\":\"We guard the build with care and never check-in on a broken build\",\"low_score\":\"We cannot easily know when a team has broken our build\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":5,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Stop the Line\",\"description\":\"If any part of the pipeline fails everyone stops feature work and fixes the problem\",\"high_score\":\"If the pipeline fails it is clear which team is responsible so we stop our work immediately and fix the problem\",\"low_score\":\"The pipeline fails so often it is difficult to know which team broke the build\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":6,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Spend on Operability\",\"description\":\"What proportion of product budget and team effort is spent on operational aspects? How do you track this?\",\"high_score\":\"We spend our 30% of our time and budget on addressing operational aspects?\",\"low_score\":\"We try to spend as little as possible on operational aspects / we do not track spend on operational aspects?\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":7,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Testability\",\"description\":\"How do we show that the software system is easy to test? What do we provide and to whom?\",\"high_score\":\"We run clients and external test packs against all parts of our software within our development pipeline.\",\"low_score\":\"We do not explicitly aim to make our software easily testable.\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":8,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Sensitive Data\",\"description\":\"How do we ensure that sensitive data in logs is masked or hidden?\",\"high_score\":\"We test data masking using feature tests that search for log messages after application behaviour is executed\",\"low_score\":\"We do not test for sensitive data in logs\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":9,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Semantic Versioning\",\"description\":\"How strict are you with your approach to semantic versioning\",\"high_score\":\"We use semantic versioning to communicate the meaning of changes, we strive to make no breaking changes at all.  We use the tolerant reader pattern for our api consumption.  We peg the major.minor release version of our dependencies\",\"low_score\":\"We just use the latest versions of each component or package and just increment our own version numbers\",\"more_info_link\":\"https://semver.org/\",\"important\":true,\"seq\":1},{\"id\":10,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Other Code\",\"description\":\"How confident are you in the code from other internal teams that you depend on\",\"high_score\":\"We are confident in our colleagues code, their docs are clear and coverage is rock solid\",\"low_score\":\"Code from other teams is really flakey and we have to reach out often to try and understand their interfaces\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":11,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Test First\",\"description\":\"What proportion of the time you spend on writing code is spent on writing tests\",\"high_score\":\"We use a test first approach all the time and spend ~80% of our coding time writing our tests\",\"low_score\":\"We often do not have time to write tests\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":12,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Unit test coverage\",\"description\":\"What is your current code coverage level?\",\"high_score\":\"It’s about 80% or greater\",\"low_score\":\"Our unit test coverage is ~10% or lower\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":13,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Test Data\",\"description\":\"How do you get your test data?\",\"high_score\":\"All our test data is generated from scripts and injected into the data stores\",\"low_score\":\"We have manual processes for setting up test data for environments\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":14,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Deployment code\",\"description\":\"How is your deployment code structured?  Do you have tests for your deployment pipeline code\",\"high_score\":\"We have deployment verification tests for key parts of our build and automation suite.  The code is modular and well structured\",\"low_score\":\"We do not test our build and deployment code, it’s just a handful of scritps\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":15,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Testability\",\"description\":\"How easy is it to test your code?\",\"high_score\":\"We use dependency injection extensivly and can easily stub out our dependencies in order to test the code\",\"low_score\":\"Our code is tightly coupled and makes it hard to test\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":16,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Rugged Manifesto\",\"description\":\"The rugged manifesto is a sensible set of practices to make our software more rugged\",\"high_score\":\"We do our best to follow this manifesto\",\"low_score\":\"Never heard of it before\",\"more_info_link\":\"https://ruggedsoftware.org\",\"important\":null,\"seq\":1},{\"id\":17,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"12 Factor Apps\",\"description\":\"The 12 factor apps patterns are set of established practices to make our software more portable\",\"high_score\":\"We follow all or nearly all practices in this manifesto\",\"low_score\":\"Never heard of it before or it\\'s points\",\"more_info_link\":\"https://12factor.net/\",\"important\":true,\"seq\":1},{\"id\":18,\"slug\":\"dev-practices\",\"category\":\"Dev Practices\",\"title\":\"Documentation\",\"description\":\"How good are your docs? How trusted are they?\",\"high_score\":\"Our docs are updated regularly and are accurate\",\"low_score\":\"Documentation is poor, out of date or non-existant\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":null,\"slug\":null,\"category\":null,\"title\":null,\"description\":null,\"high_score\":null,\"low_score\":null,\"more_info_link\":null,\"important\":null,\"seq\":null},{\"id\":1,\"slug\":\"observability\",\"category\":\"Observability\",\"title\":\"Feature Toggles Observability\",\"description\":\"How do we know which feature toggles are active for a deployments?\",\"high_score\":\"We have a simple UI or API to see what\\'s on in which environment\",\"low_score\":\"We track things manually on paper or in our heads\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":2,\"slug\":\"observability\",\"category\":\"Observability\",\"title\":\"Full stack Observability\",\"description\":\"Do you have multiple views of the entire stack\\'s telemetry?\",\"high_score\":\"We can see through the entire stack from the metal all the way up to the UI issues and performance\",\"low_score\":\"We can only see one or two layers and don\\'t really tie them together to tell a story\",\"more_info_link\":\"https://devsecops.jujhar.com/observability-strategy/\",\"important\":true,\"seq\":1},{\"id\":3,\"slug\":\"observability\",\"category\":\"Observability\",\"title\":\"Hardware insights\",\"description\":\"How much insight do we have into the behaviour of our infra/deployment fabric\",\"high_score\":\"We can tell you the CPU, RAM, NetworkIO & DiskIO for all our hardware in granular detail.  We can enumerate our hardware in detail and know which OS/CPU etc we’re running on\",\"low_score\":\"We only have very rough measures of our hardware performance\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":4,\"slug\":\"observability\",\"category\":\"Observability\",\"title\":\"Logging Working\",\"description\":\"How do we know that logging is working correctly?\",\"high_score\":\"We test logging using tests that search for specific log message strings in the central log aggregation/search system\",\"low_score\":\"We do not test if logging is working\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":5,\"slug\":\"observability\",\"category\":\"Observability\",\"title\":\"System Health\",\"description\":\"How do we know that the system is healthy (or unhealthy)?\",\"high_score\":\"We query the software using a standard http healthcheck URL and synthetic transactions for key scenarios\",\"low_score\":\"We wait for checks made manually by another team to tell us if our software is healthy\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":6,\"slug\":\"observability\",\"category\":\"Observability\",\"title\":\"Service Status\",\"description\":\"How do we display the current service/system status to ops teams and business stakeholders\",\"high_score\":\"We build a dashboard in collaboration with the operations and business teams. UX is a key consideration\",\"low_score\":\"Operations teams tend to discover the status indicators themselves\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":null,\"slug\":null,\"category\":null,\"title\":null,\"description\":null,\"high_score\":null,\"low_score\":null,\"more_info_link\":null,\"important\":null,\"seq\":null},{\"id\":1,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"CI/CD Speed and Stability\",\"description\":\"CI/CD processes are fast and stable\",\"high_score\":\"The CI/CD pipelines are super fast and we get feedback on our software on almost real-time basis\",\"low_score\":\"CI/CD takes so long to do or is very fragile and we end up losing big chunks of our day to it.\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":2,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Blue-Green\",\"description\":\"Any mechanism to test a new version alongside an existing version when necessary\",\"high_score\":\"We use fine-grained blue-green deployment techniques, at the level of individual services\",\"low_score\":\"We do not use any blue-green deployment techniques\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":3,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Idempotency - Redploying the app\",\"description\":\"What would happen if we decided to redeploy the application even though nothing has changed\",\"high_score\":\"No worries\",\"low_score\":\"We don’t know what would happen, the deployments are flakey\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":4,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Rerun tests\",\"description\":\"What would happen if we decided to rerun the test suite multiple times\",\"high_score\":\"No worries\",\"low_score\":\"We don’t know what would happen, the test suite is flakey\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":5,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Fresh config\",\"description\":\"What would happen if we decided to delete the config and redeploy it\",\"high_score\":\"No worries, the application would behave as it did before\",\"low_score\":\"It’s very likely the app would behave differently as there’s a lot of manual changes\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":6,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Environment rebuild\",\"description\":\"What would happen if we blew away the infra and re-created\",\"high_score\":\"No worries, everything would be back up quickly and same as before\",\"low_score\":\"It’s very likely the app would break as there’s a lot of manual clickops\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":7,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Release candidates\",\"description\":\"Every check-in leads to a potential release\",\"high_score\":\"Any checking can generate a safe build that might go to production without a furthur build\",\"low_score\":\"We have to have special release candidate builds before we can release\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":8,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Automated config\",\"description\":\"Config should always be performed by an automated process using values from your configuration repository\",\"high_score\":\"All config is done using scripts\",\"low_score\":\"Many of our applications are configure manually each time\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":9,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"Environment History\",\"description\":\"It should be possible to clearly see a history and log of changes made to our environments\",\"high_score\":\"We have a nice dashboard of deployments and their impact\",\"low_score\":\"It is difficult to see the history of changes in an environment\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":10,\"slug\":\"deployments\",\"category\":\"Deployments\",\"title\":\"DB Changes\",\"description\":\"Decouple application deployments from schema migrations\",\"high_score\":\"Our application or service is completely decoupled from the underlying db schemas\",\"low_score\":\"We must co-ordinate the releases of our applications with any data layer changes\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":null,\"slug\":null,\"category\":null,\"title\":null,\"description\":null,\"high_score\":null,\"low_score\":null,\"more_info_link\":null,\"important\":null,\"seq\":null},{\"id\":1,\"slug\":\"availability\",\"category\":\"Availability\",\"title\":\"MTTR\",\"description\":\"How long does it take you to restore service in the case of an incident\",\"high_score\":\"We track our MTTR across the board and can restore in <10 mins on average\",\"low_score\":\"We measure repair in days and we do not track this properly\",\"more_info_link\":\"https://en.wikipedia.org/wiki/Mean_time_to_repair\",\"important\":true,\"seq\":1},{\"id\":2,\"slug\":\"availability\",\"category\":\"Availability\",\"title\":\"Service KPIs\",\"description\":\"How do we track the main service/system Key Performance Indicators (KPIs)? What are the KPIs?\",\"high_score\":\"We use logging and/or time series metrics to emit service KPIs that are picked up by a dashboard\",\"low_score\":\"We do not have Service KPIs defined\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":3,\"slug\":\"availability\",\"category\":\"Availability\",\"title\":\"Service Restoration\",\"description\":\"How do we keep things up and running: Can you recover quickly from incidents a low MTTR? Can you detect incidents ahead of time? Can you failover to backup systems\",\"high_score\":\"We have fully adopted SRE practices across the board. We continuously monitor and improve on your numbers\",\"low_score\":\"Little to no availability practices\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":4,\"slug\":\"availability\",\"category\":\"Availability\",\"title\":\"Observability\",\"description\":\"How much observability do you have on your systems environments, inputs, outputs and behaviour. Do you have enough information on how your system runs to make improvements/solve problems?\",\"high_score\":\"Just the basics you get for free from Cloudwatch, an on-server agent, htop, task manager etc.\",\"low_score\":\"Max Instrumentation and SLO driven dashboards\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":5,\"slug\":\"availability\",\"category\":\"Availability\",\"title\":\"Run without you\",\"description\":\"If all of your team took some time off, how long would your systems keep running without you?\",\"high_score\":\"Our prod env will run for weeks without interference and self-heal\",\"low_score\":\"Everything will fall on it\\'s face within a day without our heroics\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":null,\"slug\":null,\"category\":null,\"title\":null,\"description\":null,\"high_score\":null,\"low_score\":null,\"more_info_link\":null,\"important\":null,\"seq\":null},{\"id\":1,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Path to production\",\"description\":\"How easy is it to release the software that you work to production\",\"high_score\":\"It\\'s easy and straightforward to release my changes\",\"low_score\":\"It\\'s very difficult to release and takes a long time\",\"more_info_link\":null,\"important\":true,\"seq\":2},{\"id\":2,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Low friction processes\",\"description\":\"Do you feel that the processes are suitable for you to deliver software cotinuously\",\"high_score\":\"The whole thing is a well oiled machine, everybody is in their groove and we barely feel any friction. The processes help us to do the right thing\",\"low_score\":\"The processes are painful, too numerous and makes us cry\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":3,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Psychological Safety\",\"description\":\"How safe do you feel to raise concerns\",\"high_score\":\"Our concerns are valued and used to help improve the team and org\",\"low_score\":\"If we raise concerns we are ignored or could get in trouble\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":4,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Teams around us\",\"description\":\"How well do the teams around you work with you and your team?\",\"high_score\":\"Teams around us are very friendly and helpful, it\\'s a joy to work with the other teams\",\"low_score\":\"Teams around us are unhelpful and rude\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":5,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Management style\",\"description\":\"How effective and appropriate are the approaches by management and other senior stakeholders\",\"high_score\":\"The management approaches help us to deliver rapidly and safely\",\"low_score\":\"The management approach really hamper our efforts\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":6,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Value\",\"description\":\"Do you work on valuable things as a team?\",\"high_score\":\"We live and breathe a value-driven team approach\",\"low_score\":\"We are disconnected from customer or user value\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":7,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Mission\",\"description\":\"How well do you know why you are working on things?\",\"high_score\":\"We have a clear mission that we are with all stakeholders\",\"low_score\":\"It is rarely clear what our mission is\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":8,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Speed\",\"description\":\"How rapidly do you work as a team?\",\"high_score\":\"We deliver work rapidly together\",\"low_score\":\"We seem to take a long time to get things done\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":9,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Fun\",\"description\":\"How fun is it to work in your team? How much camaraderie and sense of teamwork?\",\"high_score\":\"The team is a fun place to be every day\",\"low_score\":\"Fun is rarely an aspect of our team work\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":10,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Learning\",\"description\":\"How much do you learn as a team?\",\"high_score\":\"We learn something every day\",\"low_score\":\"We rarely learn something new\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":11,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Support\",\"description\":\"How much support do you get as a team?\",\"high_score\":\"We are well-supported as a team\",\"low_score\":\"We get very little support as a team\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":12,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Pawns or players\",\"description\":\"How much control do you have our what you work on and how?\",\"high_score\":\"We have strong influence over what we work on\",\"low_score\":\"We have very little say in what we work on\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":13,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Done\",\"description\":\"Done means released into production and not causing problems\",\"high_score\":\"Done means that the changes are deployed to prod with monitoring to ensure it has not broken anything\",\"low_score\":\"Our definition of done is a bit wishy-washy and means “feature tests have passed”\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":14,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Collaboration\",\"description\":\"How do we collaborate on operations aspects of the systems such as logging, monitoring, alerting and NFRs\",\"high_score\":\"We collaboratee on operational aspects from the very first week of the project\",\"low_score\":\"We respond after go-live wheen the tickets are raised by the live ops and service teams\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":15,\"slug\":\"culture\",\"category\":\"Culture\",\"title\":\"Our tools are cool\",\"description\":\"Do you feel that your tools, hardware and software are up to scratch\",\"high_score\":\"We love our tools and can solve any problem with them\",\"low_score\":\"My machine is so slow and crashes all the time, to install any software I have to submit a ticket\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":null,\"slug\":null,\"category\":null,\"title\":null,\"description\":null,\"high_score\":null,\"low_score\":null,\"more_info_link\":null,\"important\":null,\"seq\":null},{\"id\":1,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"Tech quality\",\"description\":\"How healthy is the code base?\",\"high_score\":\"Our code base is clean, safe to use and well-tested\",\"low_score\":\"Our code base is piled with workarounds and danger areas\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":2,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"Delivery Platform\",\"description\":\"How effective and easy to use is the delivery platform underpinning your team\\'s delivery?\",\"high_score\":\"The platform is a force multiplier and helps us deliver rapidly and safely. We love the platform.\",\"low_score\":\"The platform seems to obstruct us and is difficult to use\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":3,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"API Replay\",\"description\":\"Record interactions against a service or API\",\"high_score\":\"We record key requests and responses from remote APIS which we use to build high-fidelity integratioon tests\",\"low_score\":\"We have no way to record requests or responses from a remote API\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":4,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"Binaries\",\"description\":\"Only Build Your Binaries Once. No special \\'release candidate\\' builds\",\"high_score\":\"We have only a single build to reproduce a binary artifact which then gets promoted through all the environments with no additional merging or building needed\",\"low_score\":\"We have multiple different builds and then merge to create the final release candidate\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":5,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"Stubs\",\"description\":\"Simulate external systems. Treat almost every other system as \\'external\\'\",\"high_score\":\"The stubs we consume and write are good quality and give us a degree of confidence that our tests are working well.\",\"low_score\":\"There are few stubs available and we do noot have enough time to write stubs ourselves.\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":6,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"Call Tracing\",\"description\":\"How do we trace a call/request end-to-end through the system?\",\"high_score\":\"We use a standard tracing library to trace calls through the system. Tracing fields are maintained across component boundaries\",\"low_score\":\"We do not trace calls through the system and have to piece the info together by hand\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":7,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"Performance\",\"description\":\"How do we know that the system/service performs within acceptable ranges?\",\"high_score\":\"We run a set of indicative performances tests within our deployment pipeline that are run on every check-in to version control.\",\"low_score\":\"We rely solely on the performance team to validate the performance of our application or service.\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":8,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"Failure Modes\",\"description\":\"How can we see and share the different known failure modes (failure scenarios) for the system?\",\"high_score\":\"We use a set of error identifiers to define the failure modes in our software and we use these identifiers in our log messages\",\"low_score\":\"We do not relaly know how the system might fail\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":9,\"slug\":\"tech\",\"category\":\"Tech\",\"title\":\"TLS Certificates\",\"description\":\"How do we know when an SSL/TLS certificate is close to expiry?\",\"high_score\":\"We use auto-renewal of certificates combined with certificate monitoring so we can take remedial action ahead of time\",\"low_score\":\"We do not know when our certificates are going to expire\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":null,\"slug\":null,\"category\":null,\"title\":null,\"description\":null,\"high_score\":null,\"low_score\":null,\"more_info_link\":null,\"important\":null,\"seq\":null},{\"id\":1,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Branch Age\",\"description\":\"We develop directly on master/trunk and any feature branches last no more than 2 days\",\"high_score\":\"We developo directly no master/trunk and any feature branches last no more than 2 days\",\"low_score\":\"Our feature branches last for many sprints\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":2,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Retrospectives\",\"description\":\"How effective are your team retrospectives\",\"high_score\":\"Our retrospectives are really energising,  valuable and effective for the team and we look forward to them\",\"low_score\":\"We do not have regular retrospectives\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":3,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Onboarding\",\"description\":\"How effective is the onboarding process for new teams and new staff\",\"high_score\":\"The onboarding process is very simple, straightforward and clear\",\"low_score\":\"The onboarding process is incredibly difficult and really hampers process\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":4,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Work in Progress\",\"description\":\"How many things does your team work on at the same time? (Minimum, Typical)\",\"high_score\":\"We have explicitly limited our WIP based on queing theory (or cost of Delay) and the WIP is equal or less than the number of people on the team\",\"low_score\":\"We have significantly more Work in Progress (WIP) items than team members\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":5,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Cycle Time\",\"description\":\"How long does it take for a code change to go from version control to running in Production? (Minimum, Typical)\",\"high_score\":\"1 Hour or Less\",\"low_score\":\"2 Weeks or More\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":6,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Failed Changes\",\"description\":\"What proportion of changes to your application or service in Production fail or need remediation? (This is typically the number of failed deployments)\",\"high_score\":\"Less than 5% of our changes / deployments fail in Production\",\"low_score\":\"More than 20% of our changes / deployments fail in Production\",\"more_info_link\":null,\"important\":true,\"seq\":1},{\"id\":7,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Innovation and Improvements\",\"description\":\"How well are you able to innovate around delivery approaches?\",\"high_score\":\"We make our reserve time for innovation and process improvements every week and track changes as part of our team metrics\",\"low_score\":\"We do not have time to innovate\",\"more_info_link\":null,\"important\":null,\"seq\":1},{\"id\":8,\"slug\":\"flow\",\"category\":\"Flow\",\"title\":\"Deployment Frequency\",\"description\":\"How often does your team deploy to Production?\",\"high_score\":\"Every 2 days or less\",\"low_score\":\"Every 2 weeks or longer in practice\",\"more_info_link\":null,\"important\":true,\"seq\":1}]');\n\n//# sourceURL=webpack://devsecops-assessment/./src/js/cards.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	!function() {
/******/ 		var webpackThen = typeof Symbol === "function" ? Symbol("webpack then") : "__webpack_then__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var completeQueue = function(queue) {
/******/ 			if(queue) {
/******/ 				queue.forEach(function(fn) { fn.r--; });
/******/ 				queue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });
/******/ 			}
/******/ 		}
/******/ 		var completeFunction = function(fn) { !--fn.r && fn(); };
/******/ 		var queueFunction = function(queue, fn) { queue ? queue.push(fn) : completeFunction(fn); };
/******/ 		var wrapDeps = function(deps) { return deps.map(function(dep) {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackThen]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					dep.then(function(r) {
/******/ 						obj[webpackExports] = r;
/******/ 						completeQueue(queue);
/******/ 						queue = 0;
/******/ 					});
/******/ 					var obj = {};
/******/ 												obj[webpackThen] = function(fn, reject) { queueFunction(queue, fn), dep.catch(reject); };
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 								ret[webpackThen] = function(fn) { completeFunction(fn); };
/******/ 								ret[webpackExports] = dep;
/******/ 								return ret;
/******/ 		}); };
/******/ 		__webpack_require__.a = function(module, body, hasAwait) {
/******/ 			var queue = hasAwait && [];
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var isEvaluating = true;
/******/ 			var nested = false;
/******/ 			var whenAll = function(deps, onResolve, onReject) {
/******/ 				if (nested) return;
/******/ 				nested = true;
/******/ 				onResolve.r += deps.length;
/******/ 				deps.map(function(dep, i) { dep[webpackThen](onResolve, onReject); });
/******/ 				nested = false;
/******/ 			};
/******/ 			var promise = new Promise(function(resolve, rej) {
/******/ 				reject = rej;
/******/ 				outerResolve = function() { resolve(exports), completeQueue(queue), queue = 0; };
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackThen] = function(fn, rejectFn) {
/******/ 				if (isEvaluating) { return completeFunction(fn); }
/******/ 				if (currentDeps) whenAll(currentDeps, fn, rejectFn);
/******/ 				queueFunction(queue, fn);
/******/ 				promise.catch(rejectFn);
/******/ 			};
/******/ 			module.exports = promise;
/******/ 			body(function(deps) {
/******/ 				if(!deps) return outerResolve();
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn, result;
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					fn = function() { resolve(result = currentDeps.map(function(d) { return d[webpackExports]; })); };
/******/ 					fn.r = 0;
/******/ 					whenAll(currentDeps, fn, reject);
/******/ 				});
/******/ 				return fn.r ? promise : result;
/******/ 			}).then(outerResolve, reject);
/******/ 			isEvaluating = false;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;