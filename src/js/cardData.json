[
  {
    "id": 1,
    "slug": "dev-practices",
    "category": "Dev Practices",
    "title": "Documentation",
    "description": "How good are your docs? How trusted are they? How easy are they to find?",
    "high_score": "Our docs are updated regularly, trustworthy, accurate and easy to find",
    "low_score": "Documentation is poor, out of date or non-existant",
    "more_info_link": "https://www.atlassian.com/work-management/knowledge-sharing/documentation/importance-of-documentation",
    "what_this_tells_us": "- Self-sufficiency / reducing dependence on teams\n- Encourages knowledge sharing\n- Faster onboarding\n- Single source of truth for technical decisions, standards",
    "how_to_help": "- Planned documentation time as a team activity to update docs\n- Exemplar docs\n- Document-as-you-go",
    "important": true,
    "seq": true
  },
  {
    "id": 2,
    "slug": "dev-practices",
    "category": "Dev Practices",
    "title": "IaC",
    "description": "Do you follow Infrastructure as Code practices",
    "high_score": "We use versioned and tested IaC for all our deployments.  It is kept alongside the code or in a dedicated and well documented repo",
    "low_score": "Our deployments are manual",
    "more_info_link": "https://www.amazon.co.uk/Infrastructure-Code-Dynamic-Systems-Cloud",
    "what_this_tells_us": "- documentation of environments\n- repeatable processes\n- easier spin up of new environments\n- testability",
    "how_to_help": "- Exemplar projects\n- Templates\n- Training\n- IaC enabling teams",
    "important": null,
    "seq": true
  },
  {
    "id": 3,
    "slug": "dev-practices",
    "category": "Dev Practices",
    "title": "QA",
    "description": "How easy is it to provide confidence that the changes that are made are correct (technically and functionally)",
    "high_score": "We have multiple assurance steps of differing types run in multiple environments as part of our CI & CD processes",
    "low_score": "We only have basic unit or \"integration tests\" in place",
    "more_info_link": null,
    "what_this_tells_us": "- Shift left, shorter feedback loops\n- insight into deployment frequency\n- code is structured well enough to test\n- Documents code (discovery)\n- high confidence and correctness and proof",
    "how_to_help": "- QA Strategy\n- CI/CD Enabling team\n- Test Automation enabling teams\n- Adding in technical debt tasks",
    "important": true,
    "seq": true
  },
  {
    "id": 4,
    "slug": "dev-practices",
    "category": "Dev Practices",
    "title": "Linting and Code Quality",
    "description": "How good are your code quality and PR standards.",
    "high_score": "We have documented, automated and enforced code quality and linting standards.\nWe have a PR template that should be followed otherwise your PRs are rejected.\nWe have a structured git-branch standard that relates back to the ticket.\nOur have good discipline around our commit messages.",
    "low_score": "We don't have linting standards\nOur PR descriptions are poor or non-existent",
    "more_info_link": null,
    "what_this_tells_us": "- Team cares about quality\n- Team's code is consistent\n- Onboarding is quick\n- Cognitive load is reduced on PR comitters and approvers\n- There is an easily followed audit trail for changes",
    "how_to_help": "- Git training\n- Exemplar repos\n- CI/CD Enabling team\n- Template repos",
    "important": true,
    "seq": null
  },
  {
    "id": 5,
    "slug": "dev-practices",
    "category": "Dev Practices",
    "title": "Security",
    "description": "Security by design and automated security testing",
    "high_score": "We run regular threat modelling sessions\nWe include Evil User stories.\nWe have several automated steps as part of our CI/CD (SAST, supply chain, DAST)",
    "low_score": "We have no idea what you're talking about",
    "more_info_link": "[\"https://thoughtworksinc.github.io/sensible-security-conversations/\"]",
    "what_this_tells_us": "- The right investment is made upfront\n- Vulns don't make it to production\n- Shift left, pick up risks early\n- Vulns don't make it to production\n- Swiss cheese testing model\n- High confidence in software\n- Compliance",
    "how_to_help": "- Security Strategy\n- Security Enabling team\n- Agile threat modelling workshops\n- Tabletop threat modelling workshops\n- SecureCodeWarrior training\n",
    "important": null,
    "seq": true
  },
  {
    "id": 6,
    "slug": "dev-practices",
    "category": "Dev Practices",
    "title": "Deployment\nstrategy",
    "description": "Do you have the ability to do A/B testing in production",
    "high_score": "We use fine-grained blue-green deployment\ntechniques or other deployment strategy\nat the level of individual services\nAutomated rollbacks\nIncident response playbook",
    "low_score": "We do not use any deployment techniques\nFoggy understanding of environments\nManual config",
    "more_info_link": "[\"https://martinfowler.com/bliki/BlueGreenDeployment.html\"]",
    "what_this_tells_us": "- CI/CD maturity\n- Observability maturity\n- Product thinking - decisions are data driven and team looks for feedback loops\n- MTTR and Deployment Frequency",
    "how_to_help": "- Deployment strategy. e.g. Blue green, canary deployment etc\n- Observability strategy\n- Observability enablement\n",
    "important": true,
    "seq": true
  },
  {
    "id": 7,
    "slug": "dev-practices",
    "category": "Dev Practices",
    "title": "Sensible Defaults",
    "description": "Do you follow sensible defaults/golden path/tech radar",
    "high_score": "We have/know about sensible defaults and we follow them as best we can\nWe use technology off Tesco's golden-path/menu",
    "low_score": "We don't know about sensible defaults\nWe often ignore the golden-path",
    "more_info_link": null,
    "what_this_tells_us": "- \"Not Invented Here\" syndrome\n- overall practices maturity\n- Poor awareness of best practice\n- Sensible defaults need reviewing\n- Golden-path needs reviewing\n",
    "how_to_help": "- Publish sensible defaults for infra\n- Publish sensible defaults for back-end\n- Publish sensible defaults for front-end\n- Publish sensible defaults for security\n- Promote golden-path for infra\n- Promote golden-path for back-end",
    "important": null,
    "seq": true
  },
  {
    "id": 8,
    "slug": "culture",
    "category": "Culture",
    "title": "Uh oh",
    "description": "What happens in case of failure/incident?",
    "high_score": "We work through the situation together.\nWe discuss the issue in depth\nWe work out the best way to prevent/mitigate in future",
    "low_score": "We discuss the issue but nothing changes\nThe person/team could get in trouble or is blamed\nNo investment is made in paying down tech debt",
    "more_info_link": "[ \"https://cloud.google.com/architecture/devops/devops-culture-westrum-organizational-culture\", \"https://blog.pragmaticengineer.com/postmortem-best-practices/\" ]",
    "what_this_tells_us": "- Is there a Pathological/Bureaucratic/Generative culture\n- Tech debt stories not being prioritized\n- Absence of runbooks\n- Siloed teams",
    "how_to_help": "- Incident handling best practices\n- Blameless postmortem facilitation\n- Obserability strategy\n- JIRA audit\n- Agile coaching\n- Clear ownership and accountability of resolution\n- Runbooks for common issues",
    "important": true,
    "seq": true
  },
  {
    "id": 9,
    "slug": "culture",
    "category": "Culture",
    "title": "Onboarding",
    "description": "How easy is it to onboard members to your team and make them productive",
    "high_score": "New team members can spin up a environment quickly and commit to production < 3 weeks",
    "low_score": "It can take a few months before a team member can actively contribute\n\nIt takes a long time to discover all the codebases and environments",
    "more_info_link": "[\"https://github.com/TeamTopologies/Team-API-template\"]",
    "what_this_tells_us": null,
    "how_to_help": "- Team api templates\n- ADRs and RFCs\n- Document readmes\n- Runbook enablement\n- Documentation enabling team\n- Documentation hackathon",
    "important": true,
    "seq": true
  },
  {
    "id": 10,
    "slug": "culture",
    "category": "Culture",
    "title": "Purpose",
    "description": "Do you know why your team is doing what it's doing and how it contributes to the big picture? ",
    "high_score": "Very clear what we're doing\nWe're close to the customer\nWe see our impact quickly\nWe respond quickly to customer feedback\nWe can see the impact of our changes on our customers\nThere is a clear strategy and vision for our product",
    "low_score": "We don't know how / where our code is being used\nNo idea who our customer is or what they want. We only take educated guesses\nWe only rarely (if ever) see the impact of our changes\nWe are told what to do. Not sure why",
    "more_info_link": null,
    "what_this_tells_us": "- Individual purpose\n- Team satisfaction\n- Clear vision and shared understanding of what is being done",
    "how_to_help": "- Product & Team vision\n- Tech vision\n- Product Strategies\n- Tech strategies\n- Product analytics",
    "important": true,
    "seq": true
  },
  {
    "id": 11,
    "slug": "culture",
    "category": "Culture",
    "title": "Growth",
    "description": "Have you grown in your profession since you joined Tesco?\nHow easy is it to find clear and visible ways to help you progress in your discipline",
    "high_score": "I have given enough opportunity to explore different things\nI felt I have grown a lot since I joined tesco.\nThere are enough support forums to help me progress.\nI have been mentored many times by others.\nThere is a culture of giving feedback.",
    "low_score": "I don't get to do interesting tasks\nI don't see clear paths of progression\nI feel I am stuck",
    "more_info_link": null,
    "what_this_tells_us": "- How good are our feedback loops.\n- Are the challenges structured in a right way to grow our devs\n- Are there enough opportunities for our devs\n- Are there the right support structures in place ",
    "how_to_help": "- Create secondment opportunities and engineer rotation\n- Create mentoring framework\n- Establish and fund Communities of Practice\n- Establish and fund more hackathons",
    "important": null,
    "seq": true
  },
  {
    "id": 12,
    "slug": "flow",
    "category": "Flow",
    "title": "Git Branching",
    "description": "What is your Git branching strategy?",
    "high_score": "We develop directly on main (trunk based) or any\nfeature branches last no more than 2 days",
    "low_score": "Our feature branches can last for many sprints",
    "more_info_link": null,
    "what_this_tells_us": "- how to break down work properly\n- the value of regular and small commits\n- how blocked/unblocked they are on most tasks\n- TDD practices (good TDD enables trunk based development) - QA strategy\n- directly related to release frequency",
    "how_to_help": "- QA Strategy\n- Git training\n- Exemplar repos\n- Dave Farley's videos\n ",
    "important": true,
    "seq": true
  },
  {
    "id": 13,
    "slug": "flow",
    "category": "Flow",
    "title": "Focus time",
    "description": "How much time in a typical day do you get to be \"in the zone\"?",
    "high_score": "About half a day\nI am encouraged to and get to set aside focus time everyday",
    "low_score": "I am in and out of meetings the entire day\nI am made to attend meetings that I don't need to be in\nI am bombarded with ad-hoc requests from other teams",
    "more_info_link": null,
    "what_this_tells_us": "- Focus time is short\n- Too much context switching\n- \"Work not Visible\"\n- Too many meetings",
    "how_to_help": "- Incident handling best practices\n- Blameless postmortem facilitation\n- Obserability strategy\n- JIRA audit\n- Meeting audit\n- Agile coaching",
    "important": true,
    "seq": true
  },
  {
    "id": 14,
    "slug": "observability",
    "category": "Observability",
    "title": "Observability",
    "description": "Observability is the process of watching what your systems do at every layer so that you can build a comprehensive picture of how it does what it does",
    "high_score": "We can see through the entire stack from the metal all the way up to UI issues and performance",
    "low_score": "We can only see one or two layers and don't really tie them together to tell a story",
    "more_info_link": "https://thenewstack.io/how-much-observability-is-enough/",
    "what_this_tells_us": "- Why, how, and where is a system broken?\n- Opportunities for data-driven optimisation\n- Measure improvements / detriments over time",
    "how_to_help": "- Observability strategy\n- Exemplar projects\n- Observability enablement",
    "important": true,
    "seq": true
  }
]
